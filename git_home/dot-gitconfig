[user]
    name = "Philippe Carphin"
    email = philippe.carphin@ec.gc.ca

[alias]
    st = status
    discard = restore -p
    ds = diff --stat
    dss = "!f(){ printf '+   -   FILE\n' ; git diff --numstat ; } ; f"
    logl   = log --oneline --graph
    loglu  = log --oneline --graph                  HEAD HEAD@{u}
    logd   = log --oneline --graph --format=std
    logdu  = log --oneline --graph --format=std     HEAD HEAD@{u}
    logd2  = log --oneline --graph --format=std2
    logd3  = log --oneline --graph --format=std3
    logdw  = log --oneline --graph --format=stdwide

    # For Philippe Blain's log-series, also requires format ol in [pretty] section
	logo = log --abbrev-commit --decorate --format=ol
	logu = logo @{upstream}..
    # log-series = ! git tag UPSTREAM @{u} && git logu --format=\"- [PATCH %(describe:tags=true,match=UPSTREAM)/$(git rev-list @{u}.. | wc -l)] %s  \" --reverse  | sed -e \"s/UPSTREAM-//\" -e \"s|-g[a-f0-9]\\+/|/|\" && git tag -d UPSTREAM > /dev/null
	log-series = ! git tag UPSTREAM @{u} && git logu --topo-order --format=\"- [PATCH %(describe:tags=true,match=UPSTREAM)/$(git rev-list @{u}.. | wc -l)] %s  \" --reverse  | sed -e \"s/UPSTREAM-//\" -e \"s|-g[a-f0-9]\\+/|/|\" && git tag -d UPSTREAM > /dev/null

    grepr = grep --recurse-submodules
    find =  "!f() { : git ls-files ; git -C \"${GIT_PREFIX}\" --work-tree=$PWD ls-files :/\\*\"$1\"\\*; }; f"
    cfind =  "!f() { : git ls-files ; git -C \"${GIT_PREFIX}\" --work-tree=$PWD ls-files | grep \"$@\"; }; f"
    findr =  "!f() { : git ls-files ; git -C \"${GIT_PREFIX}\" --work-tree=$PWD lsr :/\\*\"$1\"\\*; }; f"
    lsr = ls-files --recurse-submodule
    ldap = "!f() { result=$(ldapsearch -xLLL \"(|(cn=*$1*)(uid=$1))\"); name=$(printf \"$result\" | \\grep ^cn | awk -F': ' '{print $2}'); mail=$(printf \"$result\" | \\grep ^mail | awk -F': ' '{print $2}'); echo \"$name <${mail,,}>\" ; }; f"
    detatch = "!f() { echo \"Just use 'git checkout --detatch'\" ; git checkout --detatch ; } ; f"
    suir = submodule update --init --recursive
    # view = "!f() { revision_and_line=\"$1\"; blob_revision=$(echo \"$revision_and_line\" | cut -d: -f1-2); line=$(echo \"$revision_and_line\" | cut -d: -f3); git show $blob_revision | vim -R - -c \"doautocmd BufRead $blob_revision\" +$line ; }; f"
    rawdiff = "-c \"core.pager=less --tabs=4 -RFX\" diff"
    rawshow = "-c \"core.pager=less --tabs=4 -RFX\" show"
    xd = difftool --dir-diff
    dt = difftool --dir-diff

	hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
[credential]
    helper = cache --timeout 36000

[pull]
    ff = only

[url "https://github.com/PhilippeCarphin/"]
    insteadOf = me:

[diff]
    tool = xxdiff

[core]
    excludesfile = ~/.gitignore.global
    # editor = vim
    pager = diff-so-fancy | less --tabs=4 -RFX
    # pager = less --tabs=4 -RFX

[gui]
    fontui = -family \".SF NS Text\" -size 18 -weight normal -slant roman -underline 0 -overstrike 0
    fontdiff = -family \"DejaVu Sans Mono\" -size 16 -weight normal -slant roman -underline 0 -overstrike 0
# [http "https://gitlab.science.gc.ca/"]
#        proxy = socks5h://127.0.0.1:8080
[log]
    date = human
    excludeDecoration = refs/remotes/private*

[pretty]
    std = %C(yellow)%h%C(reset)%C(auto)%d%C(reset) %C(bold white)%<|(90,trunc)%s %<(17)%C(cyan)%ad%Creset %C(blue)%an%C(reset)
    std2 = %C(yellow)%h%C(reset)%C(auto)%C(reset) %C(bold white)%<|(90,trunc)%s %<(17)%C(cyan)%ad%Creset %C(blue)%<(17,trunc)%an%C(auto)%d
    std3 = %C(auto)%d%C(reset) %C(bold white)%<|(90,trunc)%s %<(17)%C(cyan)%ad%Creset %C(blue)%an%C(reset)
    stdnarrow = %C(auto)%d%C(reset) %C(bold white)%<|(70,trunc)%s %<(17)%C(cyan)%ad%Creset %C(blue)%an%C(reset)
    stdwide = %C(yellow)%h%C(reset)%C(auto)%d%C(reset) %C(bold white)%<|(140,trunc)%s %<(17)%C(cyan)%ad%Creset %C(blue)%an%C(reset)
	# similar to '--oneline' but with additional information (author, author date, (notes truncated at 2 chars) )
	ol = %C(yellow)%h%C(reset) %C(normal)%s%C(reset) %C(dim white)%an%C(reset) %C(dim blue)(%ad)%C(reset) %C(auto)%d%C(reset)

[status]
    submoduleSummary = true

[submodule]
    # recurse = true

[safe]
    directory = *


# Merci Philippe Blain!
[color "grep"]
    filename = magenta
    linenumber = green
    column = green
    function = 146 bold
[grep]
    lineNumber = true
    column = true
    fallbackToNoIndex = true
[commit]
    # Show diffs in COMMIT_EDITMSG
    verbose = 2
[advice]
	detachedHead = false
[merge]
    tool = vimdiff
