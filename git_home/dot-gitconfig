[user]
	name = "Philippe Carphin"
	email = philippe.carphin2@canada.ca

[alias]
	st = status
	logl = log --oneline --decorate --graph --all
    logd = log --oneline --graph --format=demo --all
    logp = log --abbrev-commit --decorate --format=ol
	logo = log --abbrev-commit --decorate --format=ol
	logu = logo @{upstream}..
	log-series = ! git tag UPSTREAM @{u} && git logu --format=\"- [PATCH %(describe:tags=true,match=UPSTREAM)/$(git rev-list @{u}.. | wc -l)] %s  \" --reverse  | sed -e \"s/UPSTREAM-//\" -e \"s|-g[a-f0-9]\\+/|/|\" && git tag -d UPSTREAM > /dev/null
    grepr = grep --recurse-submodules
    find =  "!f() { : git ls-files ; git -C \"${GIT_PREFIX}\" --work-tree=$PWD ls-files :/\\*\"$1\"\\*; }; f"
    cfind =  "!f() { : git ls-files ; git -C \"${GIT_PREFIX}\" --work-tree=$PWD ls-files | grep \"$@\"; }; f"
    findr =  "!f() { : git ls-files ; git -C \"${GIT_PREFIX}\" --work-tree=$PWD lsr :/\\*\"$1\"\\*; }; f"
    lsr = ls-files --recurse-submodule
    ldap = "!f() { result=$(ldapsearch -xLLL \"(|(cn=*$1*)(uid=$1))\"); name=$(printf \"$result\" | \\grep ^cn | awk -F': ' '{print $2}'); mail=$(printf \"$result\" | \\grep ^mail | awk -F': ' '{print $2}'); echo \"$name <${mail,,}>\" ; }; f"

[credential]
	helper = cache --timeout 36000

[pull]
	ff = only

[url "https://github.com/PhilippeCarphin/"]
       insteadOf = me:

[diff]
   tool = vimdiff

[core]
	excludesfile = ~/.gitignore.global
	editor = vim
	pager = diff-so-fancy | less --tabs=4 -RFX

[gui]
	fontui = -family \".SF NS Text\" -size 18 -weight normal -slant roman -underline 0 -overstrike 0
	fontdiff = -family \"DejaVu Sans Mono\" -size 16 -weight normal -slant roman -underline 0 -overstrike 0
# [http "https://gitlab.science.gc.ca/"]
#        proxy = socks5h://127.0.0.1:8080

[pretty]
	ol = %C(yellow)%h%C(reset) %C(normal)%s%C(reset) %C(dim white)%an%C(reset) %C(dim blue)(%ad)%C(reset) %C(auto)%d%C(reset)
    # demo = %C(yellow)%h%Creset %C(cyan)%an%Creset %s -- %C(auto)%d%C(reset)
    demo = %C(yellow)%h%Creset %C(auto)%d%C(reset) %C(bold white)%<|(80)%s %C(dim blue)%an%Creset
    # demo = %C(yellow)%h%Creset %C(auto)%d%C(reset) %C(bold white)%<(60)%s %C(dim blue)%an%Creset
	# like 'ol', but with additional full hash at the end (used by 'logv')

[status]
	submoduleSummary = true

[submodule]
    # recurse = true




